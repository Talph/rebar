# Services
services:
  web:
    image: nginx:1.25
    container_name: rebar-nginx
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
        - ./:/var/www/rebar
        - ./.docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
      - node
    networks:
      - rebar

  app:
    build:
      dockerfile: ../rebar/.docker/php/Dockerfile
      target: rebar_dev
    container_name: rebar
    restart: unless-stopped
    working_dir: /var/www/rebar
    volumes:
      - ./:/var/www/rebar
      - ./.docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
    ports:
        - "9002:9000"
    environment:
      MYSQL_HOST: db
      MYSQL_PORT: ${DB_PORT}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      REDIS_HOST: cache
      REDIS_POST: ${REDIS_PORT}
      XDEBUG_MODE: "${XDEBUG_MODE:-off}"
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      db:
        condition: service_healthy
    networks:
        - rebar

  cache:
    image: redis:latest
    container_name: rebar-cache
    networks:
        - rebar
  db:
    image: mariadb:latest
    container_name: rebar-db
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - ./.docker/mysql/my.cnf:/etc/mysql/my.cnf
      - data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized" ]
      start_period: 1m
      interval: 1m
      timeout: 5s
      retries: 3
    ports:
      - "3308:3306"
    networks:
        - rebar

  node:
      image: node:20-alpine
      container_name: rebar-node
      restart: no
      ports:
          - "3002:3002"
      working_dir: /var/www/rebar
      volumes:
          - ./:/var/www/rebar
      command: [ "sh", "-c", "npm install && npm run watch" ]
      environment:
          - HOST=0.0.0.0
      networks:
          - rebar

networks:
  rebar:
    driver: bridge

# Volumes
volumes:
  data:
